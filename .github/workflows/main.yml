# This is a basic workflow to help you get started with Actions

name: Continuous integration

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '7.4' ]
    name: ICUhelp with PHP ${{ matrix.php-versions }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.5.0
        with:
          php-version: '7.4'
          tools: php-cs-fixer, phpunit
          coverage: pcov

      - name: Set Node version to 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Run yarn install
        run: yarn install

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Check which versions we're using
        run: |
          mysql --version
          php --version
          php ./bin/console --version
          php ./bin/phpunit --version
          composer --version

      - name: Check that environment is configured correctly
        run: php ./vendor/bin/requirements-checker

      - name: Run Setup scripts
        run: composer setup
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Check coding styles
        run: composer run-checks

      - name: Run Tests
        run: bin/phpunit
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}